// Max bytes/sec the host can receive data.
// Default: 196608
//
// >> Allows specifying game traffic bandwidth that online game servers are sent to client during gameplay.
// <!> Lower bandwidth rate setting can help avoid packet loss if the internet service provider or routers drop network packets.
// <!> Insufficient bandwidth rate can result in delayed network packets when the game server sends updates about players over the network to the client.
//
// <> Values:
// [MIN] 0.5 Mbps:  65536
//   |   1.0 Mbps: 131072
//   |   1.5 Mbps: 196608
//   |   2.0 Mbps: 262144
//   |   2.5 Mbps: 327680
//   |   3.0 Mbps: 393216
//   |   3.5 Mbps: 458752
//   |   4.0 Mbps: 524288
//   |   4.5 Mbps: 589824
//   |   5.0 Mbps: 655360
//   |   5.5 Mbps: 720896
// [MAX] 6.0 Mbps: 786432
rate "786432"

// Max number of command packets sent to server per second.
// Default: 64
//
// <*> If the server has a lower tick rate than the set value, the value will be automatically set to the server maximal value.
// <*> The number of packets sent, beside the set value, are also limited by the frame rate.
cl_cmdrate "128"

// Max number of packets per second of updates received from the server.
// Default: 64
//
// <*> If the server tick rate is lower than the set value, it will be automatically set to the server maximal value.
// <*> Also, it is bound to 'cl_cmdrate' via 'sv_client_cmdrate_difference 0'.
cl_updaterate "128"

// <<NOT WORKING>> Set the interpolation amount (bounded on low side by server interp ratio settings).
// Default: 0.03125
//
// >> Lerp calculation = cl_interp_ratio / cl_updaterate
//
// <*> Set value '0' to let the engine automatically calculate the correct lerp value.
//
// <> Common interpolation values calculated:
// Tickrate  64: cl_interp_ratio 2 / cl_updaterate 64  = lerp 31.250 -> ~31.3ms interpolation time
// Tickrate  64: cl_interp_ratio 1 / cl_updaterate 64  = lerp 15.625 -> ~15.6ms interpolation time
// Tickrate 128: cl_interp_ratio 2 / cl_updaterate 128 = lerp 15.625 -> ~15.6ms interpolation time
// Tickrate 128: cl_interp_ratio 1 / cl_updaterate 128 = lerp  7.813 -> ~ 7.8ms interpolation time
//
// ** The command is not working as expected:
// <!> While lerp is correctly, 'cl_interp' does not return the value that it should be automatically set to and instead returns its lowest possible value.
// <!> Does not set the correct value if 'cl_interp_ratio >1'.
// <!> The value is forced down from its default value of '0.03125' to '0.031'.
// cl_interp "0"

// Set the interpolation amount (final amount is cl_interp_ratio / cl_updaterate).
// Default: 2
//
// 1: for a stable connection (almost no packet loss).
// 2: when experiencing light loss or choke (light packet loss).
// 3: when experiencing heavy loss or choke (high packet loss).
//
// <*> The value '1' reduce entity interpolation times to a minimum. Recommended mostly for LAN and high-end  .
// <*> The value '2' interpolate over 2 snapshots to avoid issues where one snapshot is dropped once in a while. Safest option for most users.
// <*> The value '3' protect more against packet loss, increase further for more protection. For users with an unstable connection.
//
// <!> Values from '1' to '2' are enforced by almost all servers via the command 'sv_competitive_minspec 1'.
cl_interp_ratio "1"

// Enables or disables interpolation on listen servers or during demo playback.
// Default: 1
cl_interpolate "1"

// Perform client side prediction.
// Default: 1
cl_predict "1"

// Perform client side prediction of weapon effects.
// Default: 1
cl_predictweapons "1"

// Perform server side lag compensation of weapon firing events.
// Default: 1
cl_lagcompensation "1"

// Make the client to select a relay and communicate through that relay.
// Default: 0
//
// 0: Use connect method requested by GC. 
// >0: Always use SDR if possible. 
// <0: Always use direct UDP if possible
net_client_steamdatagram_enable_override "1"

// Allow steam connections to attempt to use relay servers as a fallback.
// Default: 1
net_steamcnx_allowrelay "1"

// Use steam connections on listen server as a fallback.
// Default: 1
// 
// <*> Value '2' force use of the Steam relay server connections instead of raw UDP.
net_steamcnx_enabled "2"

// Numbers of pings to a server before it give accurate result.
// Defrault: 10
//
// <!> Use a lower value if there is a high ping result in matchmaking while using SDR.
sdr ClientMinPingsBeforePingAccurate "10"

// Code of relay cluster to use.
// Default: ""
//
// <*> If not empty, it will only use relays in that cluster.
sdr ClientForceRelayCluster ""

// Number of fragments for a splitpacket that can be sent per frame.
// Default: 1
// 
// <*> Value '>1' is spliting multiple packets per frame.
// <*> A higher value reduces choke but is more CPU intensive.
// <*> For bad CPUs that cannot handle the extra load is recommended to use the default value.
net_splitrate "1

// Requested max packet size before packets are split. 
// Default: 1200
//
// Data packets are not sent with every single change made, rather via snapshots (usually 20 per seconds) which contains all change since the last update.
// So, this limits how many bytes the server is allowed to send to the client, which prevents packages getting in any buffer.
// <*> Use max allowable (default value) packet size to avoid split packets more in order to save CPU time and packet overhead.
//
// <!> If network 'Loss' occurs, lower the value:
// Value '1100' balance between reliability and avoiding split packets.
// Value '900' is a reliable packet size for routers that have trouble with larger sizes.
//
// <*> Use the command 'net_showsplits 1' to see packets logged in console.
net_maxroutable "1200"

// Max Quality of Service timeout (no response) in seconds.
// Default: 15
mm_session_search_qos_timeout "15"

// Longest preferred ping to dedicated servers for games.
// Default: 150
//
// Allows specifying max acceptable matchmaking ping when searching for a game on official matchmaking servers.
// <*> If there are official servers satisfying the ping setting, then official matchmaking will always connect in a match hosted on those servers.
// <*> If there are no official servers near, then official matchmaking will connect in a match hosted on the next nearest official server with a higher ping.
mm_dedicated_search_maxping "50"

// When performing CS:GO community matchmaking look for servers with at least so many human players.
// Default: 3
mm_csgo_community_search_players_min "6"

// Delay in seconds before the client will resend the 'connect' attempt.
// Default: 2
//
// <!> Works only before joining a server.
cl_resend "1.5"

// Total time allowed for the client to resend the 'connect' attempt.
// Default: 60
cl_resend_timeout "20"

// After this many seconds without receiving a packet from the server, the client will disconnect itself.
// Default: 30
cl_timeout "30"

// Determines which files can be downloaded from the server.
// Default: all
//
// <> Values:
// all:      Allows all server resources to download.
// nosounds: Allows all server resources to download, except sounds (ex. '.mp3', '.wav' etc.).
// none:     Blocks all server resources to download.
cl_downloadfilter "all"

// Lobby default permissions. 
// Default: 6
//
// <> Values:
// 0: Friends need invites.
// 1: All friends.
// 2: Friends and group.
// 4: Friends and nearby. 
// 6: Friends, group and nearby.
lobby_default_privacy_bits1 "0"

// Advertise joinable game in progress to Steam friends, otherwise need a Steam invite.
// Default: 1
//
// <> Values:
// 0: None - Friends can join the game only when they get a invite.
// 1: Official servers - Friends can join the game only on official servers.
// 2: All servers - Friends can join the game on official and community servers.
cl_join_advertise "2"

// Set the pre-selected maps to search when playing competitive matchmaking.
// Default:mg_de_dust2,mg_de_train,mg_de_inferno,mg_de_nuke,mg_de_mirage,mg_cs_office,mg_de_cache,
// mg_de_austria,mg_de_biome,mg_de_subzero,mg_cs_agency,mg_de_overpass,mg_de_cbble
//
// >> Maps list
// <*> Bomb Defusal maps:
// mg_de_austria
// mg_de_biome
// mg_de_cache
// mg_de_cbble
// mg_de_dust2
// mg_de_inferno
// mg_de_mirage
// mg_de_nuke
// mg_de_overpass
// mg_de_subzero
// mg_de_train
// <*> Hostage Rescue maps:
// mg_cs_agency
// mg_cs_office
// 
// <!> Do NOT add a space between the maps names!
player_competitive_maplist_8_7_0_A1CF073A "mg_de_cache,mg_de_cbble,mg_de_inferno,mg_de_mirage,mg_de_overpass"

// Set the pre-selected maps to search when playing wingman matchmaking.
// Default: mg_de_train,mg_de_lake,mg_de_inferno,mg_de_shortnuke,mg_de_shortdust,mg_gd_rialto,mg_de_overpass,mg_de_cbble
//
// >> Maps list
// mg_de_cbble
// mg_de_inferno
// mg_de_lake
// mg_de_overpass
// mg_de_shortdust
// mg_de_shortnuke
// mg_de_train
// mg_gd_rialto
// 
// <!> Do NOT add a space between the maps names!
player_competitive_maplist_2v2_7_0_3F9CD3AE "mg_de_inferno,mg_de_overpass,mg_de_shortdust,mg_de_shortnuke,mg_gd_rialto"